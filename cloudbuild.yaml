steps:
  # Install dependencies with legacy peer deps to resolve ethers version conflict
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['install', '--legacy-peer-deps']
    
  # Deploy contract to Sepolia network
  - name: 'node:20'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Deploying contract to Sepolia network..."
        npx hardhat run scripts/deploy.js --network sepolia || echo "Contract deployment failed or may already be deployed"
        
  # Verify deployment file exists and contains contract address
  - name: 'node:20'
    entrypoint: 'bash'
    args: 
      - '-c'
      - |
        echo "Checking for deployments/sepolia.json..."
        if [ -f "deployments/sepolia.json" ]; then
          echo "✓ Found deployments/sepolia.json"
          echo "File contents:"
          cat deployments/sepolia.json
          echo ""
          echo "Contract address: $(node -e "
            try {
              const data = JSON.parse(require('fs').readFileSync('deployments/sepolia.json', 'utf8'));
              console.log(data.env?.hasContractAddress || 'Address not found in expected structure');
            } catch(e) {
              console.log('Error parsing JSON:', e.message);
              process.exit(1);
            }
          ")"
        else
          echo "✗ deployments/sepolia.json not found!"
          echo "Creating deployments directory and checking if contract needs deployment..."
          mkdir -p deployments
          exit 1
        fi
    
  # Run tests (optional - uncomment if you have tests)
  # - name: 'node:20'
  #   entrypoint: 'npm'
  #   args: ['test']
    
  # Deploy to App Engine
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['app', 'deploy', '--quiet']

# Timeout for the build (adjust as needed)
timeout: '1200s'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'